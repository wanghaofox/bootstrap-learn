
// 策略模式
1、找出应用中可能需要变化之处，把他们独立出来，不要和不需要变化的代码混在一起。
   1-1：把会变化的部分取出来封装起来，好让其他部分不会受到影响。从而代码引起的不经意后果变少，系统更有弹性。
   1-2：把会变化的部分取出来并封装起来，以便以后可以轻易的改动或扩充此部分，而不影响不需要变化的部分。
   
2、针对接口编程，而不是针对实现编程。
3、多用组合，少用继承。

// 观察者模式

定义： 观察者模式定义了对象之间一对多依赖，这样以来，当一个对象改变状态时，它的所有依赖者都会收到通知并自动更新。

4、为了交互对象之间的松耦合设计而努力。

   
